<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:batch="http://www.springframework.org/schema/batch"
	xmlns:batch-int="http://www.springframework.org/schema/batch-integration"
	xsi:schemaLocation="
    http://www.springframework.org/schema/batch-integration
    http://www.springframework.org/schema/batch-integration/spring-batch-integration.xsd
    http://www.springframework.org/schema/batch
    http://www.springframework.org/schema/batch/spring-batch.xsd
    http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans.xsd">
	<batch:job id="testJdbcRead2ChannelJob"><!-- 创建一个job,命名为 testJdbcRead2ChannelJob -->
		<batch:step id="testJdbcReadJobStep1"><!-- 创建一个step,命名为 testJdbcReadJobStep1 -->
			<batch:tasklet><!-- 创建一个任务项 -->
				<batch:chunk commit-interval="1" skip-limit="10"><!-- 创建一个块 commit-interval="1" 
						每读取一次写出一次, skip-limit="10" 该块最多跳过10次 -->
					<batch:reader><!-- 创建一个ItemReader -->
						<bean class="org.roof.node.jobs.reader.JdbcItemReader"><!-- ItemReader 具体的实现类: 将数据库数据分页读入 -->
							<property name="dataSourceContext" ref="dataSourceContext" /><!-- 
								将数据源的Context注入 ,更具启动参数加载数据源 -->
						</bean>
					</batch:reader>
					<batch:writer><!-- 创建一个ItemWriter -->
						<bean class="org.roof.node.jobs.writer.ChannelPageItemWriter"><!-- ItemWriter 具体实现: 讲读取的分页数据写出到Redis 消息发布通道 -->
							<property name="outChannel" ref="toDicRedisOutChannel" /><!-- 
								将channel注入 ,供ItemWriter写出数据 -->
						</bean>
					</batch:writer>
					<batch:processor>
						<bean class="org.roof.node.jobs.processor.JdbcItemProcessor" />
					</batch:processor>
					<batch:skip-policy><!-- 配置异常跳过处理逻辑 -->
						<bean class="org.roof.node.jobs.SaveLogSkipPolicy" /><!-- 
							异常跳过具体实现类: 该实现只记录日志不进行任何处理 -->
					</batch:skip-policy>
					<batch:skippable-exception-classes> <!-- 配置跳过的异常 -->
						<batch:include class="java.lang.Exception" />
					</batch:skippable-exception-classes>
				</batch:chunk>
			</batch:tasklet>
		</batch:step>
	</batch:job>
</beans>