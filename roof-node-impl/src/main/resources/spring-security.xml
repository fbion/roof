<?xml version="1.0" encoding="UTF-8"?>

<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
                        http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.1.xsd
                        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">
	<!-- 拦截排除列表 -->
	<!-- <http pattern="/**/*" security="none" /> -->
	<http pattern="/codeAction/image.action*" security="none" />
	<http pattern="/userAction/goLogin.action*" security="none" />
	<http pattern="/userAction/login.json*" security="none" />
<!-- 	<http pattern="/letv/chain/gcr_operateAction/*.*" security="none" /> -->
<!-- 	<http pattern="/letv/chain/gcr_searchAction/*.*" security="none" /> -->
	<http pattern="/tokenAction/accessToken" security="none" />
	<http pattern="/common/js/fort_awesome/font/*" request-matcher="ant" security="none" />
	<http pattern="/**/*.jsp" request-matcher="ant" security="none" />
	<http pattern="/**/*.css" request-matcher="ant" security="none" />
	<http pattern="/**/*.js" request-matcher="ant" security="none" />
	<http pattern="/**/fonts/glyphicons-halflings-regular.*" request-matcher="ant"  security="none"  />
	<http pattern="/**/static/font/fontawesome-webfont.*" request-matcher="ant"  security="none"  />
	<http pattern=".+[.](png$|jpg$|gif$|PNG$|JPG$|GIF$|xml$|xls$)" request-matcher="regex" security="none" />

	<!-- 权限名称必须以 ROLE_ 开头 -->
	<http auto-config="true" use-expressions="true" pattern="/**"
		access-denied-page="/access-denied-page.jsp">
		<!-- <custom-filter ref="oAuth2AuthenticationProcessingFilter"
			before="ANONYMOUS_FILTER" /> -->
		<custom-filter ref="filterSecurityInterceptor" before="FILTER_SECURITY_INTERCEPTOR" />
		<logout logout-success-url="/mainAction/main.action"
			logout-url="/systemAction/j_spring_security_logout" delete-cookies="JSESSIONID" />
		<form-login login-page="/userAction/goLogin.action"
			authentication-failure-handler-ref="authenticationFailureHandler"
			authentication-success-handler-ref="authenticationSuccessHandler" />
	</http>


	<beans:bean id="authenticationFailureHandler"
		class="org.roof.web.user.service.api.ChainAuthenticationFailureHandler">
		<beans:property name="defaultFailureUrl" value="/userAction/goLogin.action" />
		<beans:property name="useForward" value="true" />
		<beans:property name="exceptionMappings">
			<beans:map>
				<beans:entry
					key="org.springframework.security.authentication.BadCredentialsException"
					value="/error" />
			</beans:map>
		</beans:property>
		<beans:property name="redirectStrategy">
			<beans:bean class="org.roof.web.user.service.api.JsonRedirectStrategy" />
		</beans:property>
		<beans:property name="authenticationFailureHandlers">
			<beans:list>
				<beans:bean
					class="org.roof.web.user.service.api.SaveLogAuthenticationFailureHandler">
					<beans:property name="loginLogService" ref="loginLogService" />
				</beans:bean>
			</beans:list>
		</beans:property>
	</beans:bean>

	<beans:bean id="authenticationSuccessHandler"
		class="org.roof.web.user.service.api.ChainAuthenticationSuccessHandler">
		<beans:property name="defaultTargetUrl" value="/mainAction/main.action" />
		<beans:property name="redirectStrategy">
			<beans:bean class="org.roof.web.user.service.api.JsonRedirectStrategy" />
		</beans:property>
		<beans:property name="authenticationSuccessHandlers">
			<beans:list>
				<beans:bean
					class="org.roof.web.user.service.api.SaveLogAuthenticationSuccessHandler">
					<beans:property name="loginLogService" ref="loginLogService" />
				</beans:bean>
			</beans:list>
		</beans:property>
	</beans:bean>

	<beans:bean id="filterSecurityInterceptor"
		class="org.springframework.security.web.access.intercept.FilterSecurityInterceptor">
		<beans:property name="authenticationManager" ref="authenticationManager" />
		<beans:property name="accessDecisionManager" ref="accessDecisionManager" />
		<beans:property name="securityMetadataSource" ref="securityMetadataSource" />
	</beans:bean>
	<!-- <beans:bean id="accessDecisionManager" class="org.roof.security.service.BaseAccessDecisionManager"> 
		</beans:bean> -->
	<beans:bean id="accessDecisionManager"
		class="org.springframework.security.access.vote.AffirmativeBased">
		<beans:constructor-arg index="0">
			<util:list>
				<beans:bean class="org.springframework.security.access.vote.RoleVoter" />
			</util:list>
		</beans:constructor-arg>
	</beans:bean>
	<authentication-manager alias="authenticationManager"
		erase-credentials="false">
		<authentication-provider user-service-ref="userDetailsService" />
	</authentication-manager>

	<beans:bean id="securityMetadataSource" scope="singleton"
		class="org.roof.web.user.service.api.InvocationSecurityMetadataSourceService">
		<beans:property name="resourceDao" ref="resourceDao" />
		<beans:property name="cacheManager" ref="cacheManager" />
		<beans:property name="cachName"
			value="InvocationSecurityMetadataSourceService#loadResourceDefine" />
		<beans:property name="roleDao" ref="roleDao" />
	</beans:bean>

</beans:beans>
